---
- name: Install required packages
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
    - samba
    - python3-policycoreutils
    - samba-client
    - cifs-utils

- name: Install selinux dependency
  ansible.builtin.package:
    name: python3-policycoreutils
    state: present

- name: Enable smb and nmb services
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: started
    enabled: true
  loop:
    - smb
    - nmb

- name: Enable firewall rules for samba
  ansible.builtin.firewalld:
    service: samba
    permanent: true
    state: enabled
  notify: Restart firewalld

- name: Add shareaccess user
  ansible.builtin.user:
    name: shareaccess
    password: $6$CRvGabIziUpx7Z5H$8dF37lNx/1d/e4XOvWjzQFkmJjBoLMNOI6M7ADKfCssptb/EI.k1IrTWz3gVj/El.1RfqLcGkrd3w0kZ7T/KM0

- name: Add eingram user to shareaccess group (for access to Shared)
  ansible.builtin.user:
    name: eingram
    groups: shareaccess
    append: true

- name: Allow samba shares with selinux
  community.general.sefcontext:
    target: '/mnt/pool0(/.*)?'
    setype: samba_share_t
    state: present

- name: Apply new SELinux file context to filesystem
  ansible.builtin.command: restorecon -R /mnt/pool0

- name: Add smb.conf
  ansible.builtin.copy:
    src: smb.conf
    dest: /etc/samba
    backup: true
    mode: '0644'
  notify: Reload smb

- name: Set perms for /mnt/pool0/Shared
  ansible.builtin.file:
    path: /mnt/pool0/Shared
    owner: shareaccess
    group: shareaccess
    recurse: true

- name: Set smbpasswd for shareaccess
  ansible.builtin.shell: >
    set -e -o pipefail
    && (pdbedit --user=shareaccess 2>&1 > /dev/null)
    || (echo '{{ lookup('hashi_vault', 'secret=secret/ssh/eingram:ssh_password') }}'; 
    echo '{{ lookup('hashi_vault', 'secret=secret/ssh/eingram:ssh_password') }}')
    | smbpasswd -s -a shareaccess
  args:
    executable: /bin/bash
  register: samba_create_users
  changed_when: "'Added user' in samba_create_users.stdout"
  no_log: true
